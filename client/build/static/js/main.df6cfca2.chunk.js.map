{"version":3,"sources":["components/AppBar/index.js","components/Jumbotron/index.js","utils/API.js","components/Button/index.js","components/ResultsCards/index.js","components/Search/index.js","pages/Home.js","pages/Saved.js","App.js","index.js"],"names":["AppBar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Jumbotron","query","axios","get","delete","bookData","post","Button","props","children","onClick","data-id","ResultCard","title","link","author","image","description","saveBook","deleteBook","event","src","alt","SearchForm","name","placeholder","onChange","handleInputChange","handleFormSubmit","Home","Component","state","books","results","target","value","this","setState","preventDefault","API","then","res","data","items","catch","err","handleSaveBook","bookID","getAttribute","newState","targetBook","filter","book","newBook","volumeInfo","authors","imageLinks","thumbnail","infoLink","console","log","componentDidMount","render","Search","map","key","Saved","handleDeleteBook","_id","response","App","color","exact","path","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df6cfca2.chunk.js","sourcesContent":["import React from \"react\";\n\n\nfunction AppBar() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n            <p className=\"navbar-brand\">Google Books</p>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"/\">Search</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"/saved\">Saved</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>)\n}\n\nexport default AppBar;","import React from 'react';\n\nfunction Jumbotron() {\n    return (\n    <div className='jumbotron jumbotron-fluid bg-secondary text-white justify-center'>\n        <p>Google Book Search</p>\n    </div>\n    )\n}\n\nexport default Jumbotron;","import axios from 'axios';\n\n\nexport default {\n    // Gets all books\n    getGoogleSearchBooks: function (query) {\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\n    },\n    getBooks: function () {\n        return axios.get('/api/books')\n    },\n    // Gets the book with the given id\n    getBook: function (id) {\n        return axios.get('/api/books/' + id);\n    },\n    // Deletes the book with the given id\n    deleteBook: function (id) {\n        return axios.delete('/api/books/' + id);\n    },\n    // Saves a book to the database\n    saveBook: function (bookData) {\n        return axios.post('/api/books', bookData);\n    }\n};\n","import React from 'react';\n\nfunction Button(props) {\n    if (props.href) {\n        return (\n        <button className='btn btn-outline-dark btn-lg btn-block'>\n            <a href={props.href}>{props.children}</a>\n        </button>\n        )\n    }\n    else if (props.onClick) {\n        return (\n            <button \n            className='btn btn-primary btn-lg btn-block'\n            onClick={props.onClick}\n            data-id={props.id} \n            >\n            {props.children}\n        </button>\n        )\n    }\n\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from '../Button'\n\nfunction ResultCard({ title, link, id, author, image, description, saveBook, deleteBook }) {\n    if (!saveBook) {\n        return (\n            <div id='result-card'>\n                <div className='row text-center' id='result-header'>\n                    <div className='col-3'>\n                        <h4>{title}</h4>\n                        <small>\n                            <br />Written By:\n                        <br />{author}</small>\n                    </div>\n                    <span className='col-3 offset-6'>\n                        <Button\n                            href={link}>\n                        View\n                        </Button>\n                        <Button\n                            id={id}\n                            onClick={(event) => saveBook(event)}\n                        >Save\n                        </Button>\n                        <Button\n                            id={id}\n                            onClick={(event) => deleteBook(event)}\n                        >Delete\n                        </Button>\n\n                    </span>\n                </div>\n                <div className='row'>\n                    <hr />\n                </div>\n                <div className='row'>\n                    <div className='col-3 text-center'>\n                        <img src={image} alt={title} />\n                    </div>\n                    <div className='col-9'>\n                        <p className='lead'>Description: </p>\n                        {description}\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div id='result-card'>\n                <div className='row text-center' id='result-header'>\n                    <div className='col-3'>\n                        <h4>{title}</h4>\n                        <small>\n                            <br />Written By:\n                        <br />{author}</small>\n                    </div>\n                    <span className='col-3 offset-6'>\n                        <Button\n                            href={link}\n                        >View\n                        </Button>\n                        <Button\n                            id={id}\n                            onClick={(event) => saveBook(event)}\n                        >Save\n                        </Button>\n                    </span>\n                </div>\n                <div className='row'>\n                    <hr />\n                </div>\n                <div className='row'>\n                    <div className='col-3 text-center'>\n                        <img src={image} alt={title} />\n                    </div>\n                    <div className='col-9'>\n                        <p className='lead'>description: </p>\n                        {description}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ResultCard;","import React from 'react';\n\nfunction SearchForm(props) {\n\n    return (\n        <div id='search-form' className='text-center'>\n            <input className='form-control' name='title'\n                placeholder='Search for a book...'\n                type='text'\n                onChange={props.handleInputChange}></input>\n                <br />\n                <button\n                className='btn btn-block btn-secondary'\n                    onClick={props.handleFormSubmit}\n                    type='submit'\n                >   Search!\n            </button>\n        </div>\n    )\n}\n\nexport default SearchForm","import React, { Component } from \"react\";\nimport Jumbotron from '../components/Jumbotron/index';\nimport API from '../utils/API';\nimport ResultCard from \"../components/ResultsCards/index\";\nimport Search from \"../components/Search/index\";\n\nclass Home extends Component {\n    state = {\n        books: [],\n        results: [],\n        title: \"\"\n    }\n\n    componentDidMount() {\n        API.getBooks()\n            .then(res =>  {\n                this.setState({ books: res.data });\n                console.log('books:', this.state.books)\n            })\n            .catch(err => {\n                throw err\n            })\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        API.getGoogleSearchBooks(this.state.title)\n            .then(res => {\n                this.setState({\n                    results: res.data.items\n                })\n            })\n            .catch(err => {\n                throw err\n            })\n    }\n    \n    handleSaveBook = event => {\n        event.preventDefault();\n\n        const bookID = event.target.getAttribute('data-id')\n        // console.log(\"Book ID:\", bookID )\n\n        const newState = {...this.state}\n        // console.log(this.state.results)\n\n        let targetBook = this.state.results.filter(book => book.id === bookID)\n        // Parses out book data from results by book id\n\n        const newBook = {\n            title: targetBook[0].volumeInfo.title,\n            authors: targetBook[0].volumeInfo.authors,\n            description: targetBook[0].volumeInfo.description,\n            image: targetBook[0].volumeInfo.imageLinks.thumbnail,\n            link: targetBook[0].volumeInfo.infoLink\n        }\n        // Instantiates new object formatted per the db schema.\n\n        if (this.state.books[bookID]) {\n            console.log(`You've already saved that book.`)\n            return\n\n        } else {\n            newState.books[bookID] = newBook\n            // console.log('Target:', targetBook[0])\n            \n            this.setState(newState)\n            // Mutates state to now hold saved books in this.state.books\n            console.log('Updated this.state:', this.state.books)\n\n            API.saveBook({\n                title: targetBook[0].volumeInfo.title,\n                authors: targetBook[0].volumeInfo.authors,\n                description: targetBook[0].volumeInfo.description,\n                image: targetBook[0].volumeInfo.imageLinks.thumbnail,\n                link: targetBook[0].volumeInfo.infoLink\n            })\n\n            console.log(newState.books)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Jumbotron />\n                <div className='container'>\n                    <Search\n                    handleFormSubmit = {this.handleFormSubmit}\n                    handleInputChange = {this.handleInputChange} />\n                    <div className='container-fluid' id='main-content'>\n                        {this.state.results.map((book) => {\n                            return (\n                                <ResultCard\n                                    key={book.id}\n                                    title={book.volumeInfo.title}\n                                    id={book.id}\n                                    link={book.volumeInfo.infoLink}\n                                    author={book.volumeInfo.authors}\n                                    image={book.volumeInfo.imageLinks.thumbnail}\n                                    description={book.volumeInfo.description}\n                                    saveBook={this.handleSaveBook}\n                                />\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport API from '../utils/API';\nimport ResultCard from \"../components/ResultsCards/index\";\n\nclass Saved extends Component {\n    state = {\n        results: []\n    }\n\n    componentDidMount() {\n        API.getBooks()\n            .then(res =>  {\n                this.setState({ results: res.data });\n                console.log('results:', this.state.results)\n            })\n            .catch(err => {\n                throw err\n            })\n    }\n\n    handleDeleteBook = event => {\n        event.preventDefault();\n\n        const bookID = event.target.getAttribute('data-id')\n\n        const newState = {...this.state}\n\n        newState.results = this.state.results.filter(book => book._id !== bookID)\n        // Filters out any books with the matching target id\n\n        API.deleteBook(bookID).then(\n            (response) => {\n                this.setState(newState)\n                console.log(response);\n\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='container'>\n                    <h3>Your Saved Books</h3>\n                    <div className='container-fluid' id='main-content'>\n                        {this.state.results.map((book) => {\n                            return (\n                                <ResultCard\n                                    key={book._id}\n                                    title={book.title}\n                                    id={book._id}\n                                    link={book.link}\n                                    author={book.authors}\n                                    image={book.image}\n                                    description={book.description}\n                                    deleteBook={this.handleDeleteBook}\n                                />\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Saved;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport Home from './pages/Home';\nimport Saved from './pages/Saved';\n\nfunction App() {\n    return (\n        <Router>\n                <div>\n                    <AppBar color=\"primary\" />\n                    <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/saved\" component={Saved} />\n                    </Switch>\n                </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}